#ifndef MCP23017_I2C_h 
#define MCP23017_I2C_h 

#include "Arduino.h"
#include "Wire.h"

class MCP23017_I2C
{
    public:
    uint8_t readReg(uint8_t DevAddr, uint8_t RegAddr);
    void writeReg(uint8_t DevAddr, uint8_t RegAddr, uint8_t value);
};

// registers
#define IODIRA 0x00   // I/O DIRECTION REGISTER A
#define IPOLA 0x02    // INPUT POLARITY REGISTER A
#define GPINTENA 0x04 // INTERRUPT-ON-CHANGE CONTROL REGISTER A
#define DEFVALA 0x06  // DEFAULT COMPARE REGISTER FOR INTERRUPT-ON-CHANGE A
#define INTCONA 0x08  // INTERRUPT CONTROL REGISTER A
#define IOCONA 0x0A   // CONFIGURATION REGISTER A
#define GPPUA 0x0C    // PULL-UP RESISTOR CONFIGURATION REGISTER A
#define INTFA 0x0E    // INTERRUPT FLAG REGISTER A
#define INTCAPA 0x10  // INTERRUPT CAPTURED REGISTER A
#define GPIOA 0x12    // PORT REGISTER A
#define OLATA 0x14    // OUTPUT LATCH REGISTER A

#define IODIRB 0x01   // I/O DIRECTION REGISTER B
#define IPOLB 0x03    // INPUT POLARITY REGISTER B
#define GPINTENB 0x05 // INTERRUPT-ON-CHANGE CONTROL REGISTER B
#define DEFVALB 0x07  // DEFAULT COMPARE REGISTER FOR INTERRUPT-ON-CHANGE B
#define INTCONB 0x09  // INTERRUPT CONTROL REGISTER B
#define IOCONB 0x0B   // CONFIGURATION REGISTER B
#define GPPUB 0x0D    // PULL-UP RESISTOR CONFIGURATION REGISTER B
#define INTFB 0x0F    // INTERRUPT FLAG REGISTERr B
#define INTCAPB 0x11  // INTERRUPT CAPTURED REGISTER B
#define GPIOB 0x13    // PORT REGISTER B
#define OLATB 0x15    // OUTPUT LATCH REGISTER B

#endif